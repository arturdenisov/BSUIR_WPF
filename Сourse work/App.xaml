<Application x:Class="DenisovArt_Kurs.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DenisovArt_Kurs"
             StartupUri="MainWindow.xaml"
             Startup="Application_Startup"
             Exit="Application_Exit"
             DispatcherUnhandledException="Application_UnhandledException">
    <Application.Resources>

        <!--Unnamed Styles-->
        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="DatePicker">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style TargetType="TextBox" >
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="Black" BorderThickness="1" CornerRadius="10,10,10,10" x:Name="bd">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="bd" Property="Background" Value="Gray"/>
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Named Styles-->
        <Style TargetType="TextBlock" x:Key="HeaderUseControl" >
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontStyle" Value="Oblique"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="StatusBar" >
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox" x:Key="StatusBar_PASSIVE" >
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox" x:Key="StatusBar_ACTIVE" >
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Green"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style  TargetType="TextBox" x:Key="ValidationFailed">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding 
                                RelativeSource={x:Static RelativeSource.Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Window" x:Key="StandartWindow" >
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style TargetType="UserControl" x:Key="StandartUseControl" >
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style TargetType="Border" x:Key="OvalBorder">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="CornerRadius" Value="7"/>
            <Setter Property="Padding" Value="2"/>
        </Style>
        <Style TargetType="Label" x:Key="LabelForEditorWindows">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button" x:Key="HomeButton">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Height" Value="75" />
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                    BorderBrush="Black" BorderThickness="1" CornerRadius="35,15,35,15" x:Name="bd">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="bd" Property="Background" Value="Gray"/>
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ExitButton">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="LightPink" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="75" />
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                    BorderBrush="Black" BorderThickness="1" CornerRadius="15,15,15,15" x:Name="bd">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="LightCoral"/>
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="AddButton">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="YellowGreen" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="75" />
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                    BorderBrush="Black" BorderThickness="1" CornerRadius="15,15,15,15" x:Name="bd">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="LightGreen"/>
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
