////Tickets.cs////
/*
 //------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DenisovArt_Kurs
{
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;

    public partial class Ticket
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Ticket()
        {
            this.OrderedServices = new HashSet<OrderedService>();
        }

        public int TicketID { get; set; }
        public int DocTimetableID { get; set; }
        public System.DateTime VisitDateTime { get; set; }
        public Nullable<bool> Reserved { get; set; }

        public virtual DocTimeTable DocTimeTable { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrderedService> OrderedServices { get; set; }

        public XElement TickPassportXml()
        {
            XElement xClientPassport =
                    new XElement("Ticket",
                        new XElement("TicketID", TicketID.ToString()),
                        new XElement("DocTimetableID", DocTimetableID.ToString()),
                        new XElement("VisitDateTime", VisitDateTime.ToString()),
                        new XElement("Reserved", Reserved.ToString())
                            );
            return xClientPassport;
        }
    }
}

 
 */


////DocTimeTable.cs////
/*
 //------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DenisovArt_Kurs
{
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    
    public partial class DocTimeTable
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public DocTimeTable()
        {
            this.Tickets = new HashSet<Ticket>();
        }
    
        public int DocTimeTableID { get; set; }
        public bool WorkingShiftFirst { get; set; }
        public int Room { get; set; }
        public int DocID { get; set; }
    
        public virtual Doctor Doctor { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Ticket> Tickets { get; set; }
   

    public XElement DocTimeTablePassportXml()
    {
        List<Ticket> cTick = new List<Ticket>();
        foreach (Ticket t in (new DenisovArt_KursProjectEntities()).Tickets)
        {
            cTick.Add(t);
        }


            XElement xClientPassport =
                        new XElement("DocTimeTable",
                            new XElement("DocTimeTableID", DocTimeTableID.ToString()),
                            new XElement("WorkingShiftFirst", WorkingShiftFirst.ToString()),
                            new XElement("Room", Room.ToString()),
                            new XElement("DocID", DocID.ToString()));
        return xClientPassport;
    }
    }

}

 
 
 */


////Doctor.cs////
/*
 //------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DenisovArt_Kurs
{
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    using System.Linq;

    public partial class Doctor
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Doctor()
        {
            this.DocTimeTables = new HashSet<DocTimeTable>();
        }

        public int DocID { get; set; }
        public string SecondName { get; set; }
        public string FirstName { get; set; }
        public string ThirdName { get; set; }
        public int SpecialityID { get; set; }
        public string SpecialityTitle
        {
            get
            {
                return this.DocSpeciality.SpecialityTitle;
            }
        }
        public int Room
        {
            get
            {
                foreach (DocTimeTable doc in DocTimeTables)
                {

                    return doc.Room;
                }
                return 0;
            }
        }
        public bool WorkShiftFirst
        {
            get
            {
                foreach (DocTimeTable doc in DocTimeTables)
                {

                    return doc.WorkingShiftFirst;
                }
                return true;
            }
        }
        public Int32 DocTimeTableID
        {
            get
            {
                foreach (DocTimeTable doc in DocTimeTables)
                {

                    return doc.DocTimeTableID;
                }
                return 0;
            }

        }

        public virtual DocSpeciality DocSpeciality { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DocTimeTable> DocTimeTables { get; set; }

        public XElement DocPassportXml()
        {
            if (String.IsNullOrEmpty(FirstName.ToString()) == true) FirstName = string.Empty;
            if (String.IsNullOrEmpty(ThirdName.ToString()) == true) ThirdName = string.Empty;

            List<Ticket> cTick = new List<Ticket>();
            foreach (Ticket t in (new DenisovArt_KursProjectEntities()).Tickets)
            {
                cTick.Add(t);
            }


            XElement xClientPassport =
                        new XElement("Doctor",
                            new XElement("DocID", DocID.ToString()),
                            new XElement("FirstName", FirstName),
                            new XElement("SecondName", SecondName),
                            new XElement("ThirdName", ThirdName),
                            new XElement("SpecialityID", SpecialityID.ToString()));
            return xClientPassport;
        }

    }
}

 
 */


////Client.cs////
/*
 //------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DenisovArt_Kurs
{
   using System;
   using System.Collections.Generic;
   using System.Xml.Linq;

   public partial class Client
   {
       [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
       public Client()
       {
           this.VisitLists = new HashSet<VisitList>();
       }

       public int ClientID { get; set; }
       public System.DateTime RegisterDate { get; set; }
       public string SecondName { get; set; }
       public string FitstName { get; set; }
       public string ThirdName { get; set; }
       public string PassportNumber { get; set; }
       public string ContactInformation { get; set; }
       public Nullable<System.DateTime> BirthdayDate { get; set; }

       [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
       public virtual ICollection<VisitList> VisitLists { get; set; }


       public string BirthdayDate_woutTime
       {
           get
           {
               return String.Format("{0:00}.{1:00}.{2:00}", BirthdayDate.Value.Year, BirthdayDate.Value.Month, BirthdayDate.Value.Day);
           }
           set {; }
       }

       public XElement ClientPassportXml()
       {
           if (String.IsNullOrEmpty(FitstName.ToString()) == true) FitstName = string.Empty;
           if (String.IsNullOrEmpty(ThirdName.ToString()) == true) ThirdName = string.Empty;
           if (String.IsNullOrEmpty(PassportNumber.ToString()) == true) PassportNumber = string.Empty;
           if (String.IsNullOrEmpty(ContactInformation.ToString()) == true) ContactInformation = string.Empty;

           XElement xClientPassport =
                   new XElement("Client",
                       new XElement("ClientID", ClientID.ToString()),
                       new XElement("RegisterDate", RegisterDate.ToString()),
                       new XElement("FirstName", FitstName.ToString()),
                       new XElement("SecondName", SecondName.ToString()),
                       new XElement("ThirdName", ThirdName.ToString()),
                       new XElement("PassportNumber", PassportNumber.ToString()),
                       new XElement("ContactInformation", ContactInformation.ToString()),
                       new XElement("BirthdayDate", BirthdayDate.ToString())
                           );
           return xClientPassport;
       }
   }
}

 */
